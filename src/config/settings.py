from dataclasses import dataclass
from typing import Dict
from typing import Optional


@dataclass
class AppConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""

    title: str = "üè† –ü—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—å —Ü–µ–Ω –Ω–∞ –¥–æ–º–∞"
    page_icon: str = "üè†"
    layout: str = "wide"
    sidebar_title: str = "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏"

    # –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–∏
    model_save_path: str = "models/trained_model.pkl"

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    log_level: str = "INFO"
    log_file: str = "logs/app.log"


@dataclass
class ModelConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è"""

    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã Random Forest
    n_estimators: int = 100
    random_state: int = 42
    max_depth: Optional[int] = None
    min_samples_split: int = 2
    min_samples_leaf: int = 1

    # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    test_size: float = 0.3
    train_random_state: int = 42

    # –í–∞–ª–∏–¥–∞—Ü–∏—è
    cv_folds: int = 5


@dataclass
class FeatureConfig:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–∑–Ω–∞–∫–æ–≤"""

    FEATURE_DESCRIPTIONS: Optional[Dict[str, str]] = None
    FEATURE_UNITS: Optional[Dict[str, str]] = None
    FEATURE_RANGES: Optional[Dict[str, tuple]] = None

    def __post_init__(self):
        self.FEATURE_DESCRIPTIONS = {
            "MedInc": "–°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ –≤ —Ä–∞–π–æ–Ω–µ",
            "HouseAge": "–°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç –¥–æ–º–æ–≤ –≤ —Ä–∞–π–æ–Ω–µ",
            "AveRooms": "–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç –Ω–∞ –¥–æ–º",
            "AveBedrms": "–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–ª–µ–Ω –Ω–∞ –¥–æ–º",
            "Population": "–ù–∞—Å–µ–ª–µ–Ω–∏–µ —Ä–∞–π–æ–Ω–∞",
            "AveOccup": "–°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–∂–∏–≤–∞—é—â–∏—Ö –Ω–∞ –¥–æ–º",
            "Latitude": "–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è —à–∏—Ä–æ—Ç–∞ —Ä–∞–π–æ–Ω–∞",
            "Longitude": "–ì–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –¥–æ–ª–≥–æ—Ç–∞ —Ä–∞–π–æ–Ω–∞",
        }

        self.FEATURE_UNITS = {
            "MedInc": "–¥–µ—Å—è—Ç–∫–∏ —Ç—ã—Å—è—á $",
            "HouseAge": "–ª–µ—Ç",
            "AveRooms": "–∫–æ–º–Ω–∞—Ç",
            "AveBedrms": "—Å–ø–∞–ª–µ–Ω",
            "Population": "—á–µ–ª–æ–≤–µ–∫",
            "AveOccup": "—á–µ–ª–æ–≤–µ–∫/–¥–æ–º",
            "Latitude": "–≥—Ä–∞–¥—É—Å—ã",
            "Longitude": "–≥—Ä–∞–¥—É—Å—ã",
        }


# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
app_config = AppConfig()
model_config = ModelConfig()
feature_config = FeatureConfig()


def get_app_config() -> AppConfig:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    return app_config


def get_model_config() -> ModelConfig:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–æ–¥–µ–ª–∏"""
    return model_config


def get_feature_config() -> FeatureConfig:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏–∑–Ω–∞–∫–æ–≤"""
    return feature_config
